!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).AlpineWakeLock=n()}(this,(function(){"use strict";return e=>{e.directive("wakelock",((n,{value:i,expression:t},{evaluate:o})=>{if(!t)return void console.error("Wake Lock directive requires a value/expression");let s=null;const a="wakeLock"in navigator,r=async()=>{if(a)try{s=await navigator.wakeLock.request("screen"),s.addEventListener("release",(()=>{console.log("Screen Wake Lock released")}))}catch(e){console.warn("Wake Lock error:",e.message)}else console.warn("Wake Lock API is not supported in this browser")},c=async()=>{s&&(await s.release(),s=null)},l=async()=>{null!==s&&"visible"===document.visibilityState&&await r()};e.effect((()=>{o(t)?(r(),document.addEventListener("visibilitychange",l)):(c(),document.removeEventListener("visibilitychange",l))})),n._x_cleanups=n._x_cleanups||[],n._x_cleanups.push((()=>{c(),document.removeEventListener("visibilitychange",l)}))}))}}));
