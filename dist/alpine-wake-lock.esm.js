const e=e=>{e.directive("wakelock",((a,{value:n,expression:i},{evaluate:s})=>{if(!i)return void console.error("Wake Lock directive requires a value/expression");let t=null;const o="wakeLock"in navigator,r=async()=>{if(o)try{t=await navigator.wakeLock.request("screen"),t.addEventListener("release",(()=>{console.log("Screen Wake Lock released")}))}catch(e){console.warn("Wake Lock error:",e.message)}else console.warn("Wake Lock API is not supported in this browser")},c=async()=>{t&&(await t.release(),t=null)},l=async()=>{null!==t&&"visible"===document.visibilityState&&await r()};e.effect((()=>{s(i)?(r(),document.addEventListener("visibilitychange",l)):(c(),document.removeEventListener("visibilitychange",l))})),a._x_cleanups=a._x_cleanups||[],a._x_cleanups.push((()=>{c(),document.removeEventListener("visibilitychange",l)}))}))};export{e as default};
